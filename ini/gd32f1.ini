#
# Anycubic Vyper (STM32F103RET6)
#
#[env:STM32F103RET6_ac_tri_f1]
[env:GD32F103]
platform                    = ${common_stm32.platform}
extends                     = gd32_variant
board                       = genericSTM32F103RE
board_build.variant         = MARLIN_F103Rx
board_build.offset          = 0x8000
board_upload.offset_address = 0x08008000
#build_type                  = debug
lib_ignore           = SoftwareSerialM
build_flags                 = ${stm32_variant.build_flags}
                              -DDEBUG_LEVEL=0 
                              -DMCU_STM32F103RE 
                              -DSTM32F1xx 
                              -DVECT_TAB_OFFSET=0x8000
                              -DLD_FLASH_OFFSET=0x8000
                              -DHAL_SD_MODULE_ENABLED
                              -DSS_TIMER=4 
                              -DTIMER_SERVO=TIM5
                              -DENABLE_HWSERIAL3 
                              -DTRANSFER_CLOCK_DIV=8
#                              -IMarlin/src/HAL/STM32F1

                              -O0
build_unflags               = ${stm32_variant.build_unflags}
                              -DUSBCON -DUSBD_USE_CDC
extra_scripts               = ${stm32_variant.extra_scripts}
                              pre:buildroot/share/PlatformIO/scripts/random-Vyper-bin.py
monitor_speed               = 115200
#debug_tool                  = jlink
#upload_protocol             = jlink


[common_gd32]
platform         = ststm32@~12.1
board_build.core = stm32
build_flags      = ${common.build_flags}
                   -std=gnu++14 -DHAL_STM32
#                   -DUSBCON -DUSBD_USE_CDC
                   -DTIM_IRQ_PRIO=13
                   -DADC_RESOLUTION=12
build_unflags    = -std=gnu++11
src_filter       = ${common.default_src_filter} +<src/HAL/GD32> +<src/HAL/shared/backtrace> -<src/HAL/GD32/usb_host.cpp> -<src/HAL/GD32/usb_serial.cpp>
extra_scripts    = ${common.extra_scripts}
                   pre:buildroot/share/PlatformIO/scripts/stm32_serialbuffer.py


[gd32_variant]
extends       = common_gd32
extra_scripts = ${common_stm32.extra_scripts}
                pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
                    buildroot/share/PlatformIO/scripts/offset_and_rename.py
